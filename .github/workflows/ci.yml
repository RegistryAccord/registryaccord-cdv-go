name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61.0
          args: --version

      - name: Format check
        run: make fmt-check

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Coverage check
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          if [ "$(echo "$COVERAGE < 80" | bc)" -eq 1 ]; then
            echo "Coverage is below 80%: $COVERAGE%"
            exit 1
          else
            echo "Coverage is acceptable: $COVERAGE%"
          fi

      - name: Vulnerability scan
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: API Validate (optional)
        run: |
          if make -n api-validate >/dev/null 2>&1; then
            make api-validate
          else
            echo "api-validate target not present, skipping"
          fi
